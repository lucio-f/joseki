"""Test cases for the mipas_rfm module."""
import pytest

from joseki import mipas_rfm


def test_parse_unit() -> None:
    """Returns expected units."""
    assert mipas_rfm._parse_units("[K]") == "K"
    assert mipas_rfm._parse_units("[mb]") == "millibar"


def test_parse_unit_invalid() -> None:
    """Invalid unit string raises ValueError."""
    with pytest.raises(ValueError):
        mipas_rfm._parse_units("[missing right bracket")

    with pytest.raises(ValueError):
        mipas_rfm._parse_units("missing left bracket]")

    with pytest.raises(ValueError):
        mipas_rfm._parse_units("missing right and left bracket")


def test_parse_var_name() -> None:
    """Variable names are translated as expected."""
    assert mipas_rfm._parse_var_name("HGT") == "z_level"
    assert mipas_rfm._parse_var_name("PRE") == "p"
    assert mipas_rfm._parse_var_name("TEM") == "t"
    assert mipas_rfm._parse_var_name("other") == "other"


def test_parse_content() -> None:
    """Returns a dict."""
    lines = [
        "! MID-LATITUDE DAY PROFILES FOR MIPAS",
        "! Set hydros.eqlbm pressure profile for Lat= 45.0 using program "
        "HYDATM v.20FEB01",
        "! 03-JAN-2001  JJR  VERSION 3.0",
        "! Originator: J.J. Remedios (EOS, Space Research Centre, Leicester, U.K.)",
        "!",
        "! Version 3 delivery includes profiles for 5 atmospheres:",
        "! polar winter, polar summer, mid-lat day/ngt, tropical (day)",
        "!",
        "! FORMAT: MIPAS RFM FORMAT (ATM files)",
        "!         ! starts Comment Lines (arbitrary no.)",
        "!         121 = first no. = no. of altitudes = nalt",
        "!         Each variable starts with * e.g. *HCN [ppmv]",
        "!         where ppmv = units. Additional comments may appear in curved",
        "!         brackets e.g. *F14 (CF4) [ppmv]",
        "!         Each species declaration is followed by nalt data values",
        "!         First variable is usually HGT",
        "!         File ends with *END",
        "!",
        "! This version contains",
        "! HGT PRE TEM N2 O2 CO2 O3 H2O CH4 N2O HNO3 CO NO2 N2O5 ClO HOCl ClONO2 NO",
        "! HNO4 HCN NH3 F11 F12 F14 F22 CCl4 COF2 H2O2 C2H2 C2H6 OCS SO2 SF6",
        "!",
        "!",
        "         121 ! Profile Levels",
        "*HGT [km]",
        "   0.0000000   1.0000000   2.0000000   3.0000000   4.0000000",
        "   5.0000000   6.0000000   7.0000000   8.0000000   9.0000000",
        "  10.0000000  11.0000000  12.0000000  13.0000000  14.0000000",
        "  15.0000000  16.0000000  17.0000000  18.0000000  19.0000000",
        "  20.0000000  21.0000000  22.0000000  23.0000000  24.0000000",
        "  25.0000000  26.0000000  27.0000000  28.0000000  29.0000000",
        "  30.0000000  31.0000000  32.0000000  33.0000000  34.0000000",
        "  35.0000000  36.0000000  37.0000000  38.0000000  39.0000000",
        "  40.0000000  41.0000000  42.0000000  43.0000000  44.0000000",
        "  45.0000000  46.0000000  47.0000000  48.0000000  49.0000000",
        "  50.0000000  51.0000000  52.0000000  53.0000000  54.0000000",
        "  55.0000000  56.0000000  57.0000000  58.0000000  59.0000000",
        "  60.0000000  61.0000000  62.0000000  63.0000000  64.0000000",
        "  65.0000000  66.0000000  67.0000000  68.0000000  69.0000000",
        "  70.0000000  71.0000000  72.0000000  73.0000000  74.0000000",
        "  75.0000000  76.0000000  77.0000000  78.0000000  79.0000000",
        "  80.0000000  81.0000000  82.0000000  83.0000000  84.0000000",
        "  85.0000000  86.0000000  87.0000000  88.0000000  89.0000000",
        "  90.0000000  91.0000000  92.0000000  93.0000000  94.0000000",
        "  95.0000000  96.0000000  97.0000000  98.0000000  99.0000000",
        " 100.0000000 101.0000000 102.0000000 103.0000000 104.0000000",
        " 105.0000000 106.0000000 107.0000000 108.0000000 109.0000000",
        " 110.0000000 111.0000000 112.0000000 113.0000000 114.0000000",
        " 115.0000000 116.0000000 117.0000000 118.0000000 119.0000000",
        " 120.0000000",
        "*PRE [mb]",
        " 1.01700E+03 9.01083E+02 7.96450E+02 7.02227E+02 6.17614E+02",
        " 5.41644E+02 4.73437E+02 4.12288E+02 3.57603E+02 3.08960E+02",
        " 2.65994E+02 2.28348E+02 1.95619E+02 1.67351E+02 1.43039E+02",
        " 1.22198E+02 1.04369E+02 8.91410E+01 7.61528E+01 6.50804E+01",
        " 5.56410E+01 4.75910E+01 4.07233E+01 3.48637E+01 2.98633E+01",
        " 2.55956E+01 2.19534E+01 1.88445E+01 1.61909E+01 1.39258E+01",
        " 1.19913E+01 1.03400E+01 8.92988E+00 7.72454E+00 6.69240E+00",
        " 5.80701E+00 5.04654E+00 4.39238E+00 3.82902E+00 3.34337E+00",
        " 2.92413E+00 2.56128E+00 2.24640E+00 1.97258E+00 1.73384E+00",
        " 1.52519E+00 1.34242E+00 1.18197E+00 1.04086E+00 9.16546E-01",
        " 8.06832E-01 7.09875E-01 6.24101E-01 5.48176E-01 4.80974E-01",
        " 4.21507E-01 3.68904E-01 3.22408E-01 2.81386E-01 2.45249E-01",
        " 2.13465E-01 1.85549E-01 1.61072E-01 1.39644E-01 1.20913E-01",
        " 1.04568E-01 9.03249E-02 7.79269E-02 6.71493E-02 5.77962E-02",
        " 4.96902E-02 4.26736E-02 3.66093E-02 3.13743E-02 2.68598E-02",
        " 2.29699E-02 1.96206E-02 1.67399E-02 1.42646E-02 1.21397E-02",
        " 1.03181E-02 8.75775E-03 7.42226E-03 6.28076E-03 5.30519E-03",
        " 4.47183E-03 3.76124E-03 3.15632E-03 2.64248E-03 2.20738E-03",
        " 1.84003E-03 1.53095E-03 1.27204E-03 1.05608E-03 8.76652E-04",
        " 7.27980E-04 6.04920E-04 5.03201E-04 4.19226E-04 3.49896E-04",
        " 2.92659E-04 2.45421E-04 2.06394E-04 1.74125E-04 1.47441E-04",
        " 1.25333E-04 1.06985E-04 9.17300E-05 7.90172E-05 6.84172E-05",
        " 5.95574E-05 5.21183E-05 4.58348E-05 4.05127E-05 3.59987E-05",
        " 3.21583E-05 2.88718E-05 2.60322E-05 2.35687E-05 2.14263E-05",
        " 1.95489E-05",
        "*TEM [K]",
        " 285.14 279.34 273.91 268.30 263.24",
        " 256.55 250.20 242.82 236.17 229.87",
        " 225.04 221.19 218.85 217.19 216.20",
        " 215.68 215.42 215.55 215.92 216.40",
        " 216.93 217.45 218.00 218.68 219.39",
        " 220.25 221.30 222.41 223.88 225.42",
        " 227.20 229.52 231.89 234.51 236.85",
        " 239.42 241.94 244.57 247.36 250.32",
        " 253.34 255.82 258.27 260.39 262.03",
        " 263.45 264.20 264.78 264.67 264.38",
        " 263.24 262.03 260.02 258.09 255.63",
        " 253.28 250.43 247.81 245.26 242.77",
        " 240.38 237.94 235.79 233.53 231.50",
        " 229.53 227.60 225.62 223.77 222.06",
        " 220.33 218.69 217.18 215.64 214.13",
        " 212.52 210.86 209.25 207.49 205.81",
        " 204.11 202.22 200.32 198.39 195.92",
        " 193.46 190.94 188.31 185.82 183.57",
        " 181.43 179.74 178.64 178.10 178.25",
        " 178.70 179.41 180.67 182.31 184.18",
        " 186.60 189.53 192.66 196.54 201.13",
        " 205.93 211.73 217.86 225.00 233.53",
        " 242.57 252.14 261.48 272.97 285.26",
        " 299.12 312.20 324.17 338.34 352.56",
        " 365.28",
        "*N2 [ppmv]",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.890e+05 7.890e+05 7.880e+05 7.880e+05 7.880e+05",
        " 7.890e+05 7.900e+05 7.890e+05 7.890e+05 7.890e+05",
        " 7.910e+05 7.900e+05 7.880e+05 7.900e+05 7.910e+05",
        " 7.910e+05 7.900e+05 7.890e+05 7.890e+05 7.880e+05",
        " 7.880e+05 7.890e+05 7.890e+05 7.890e+05 7.880e+05",
        " 7.880e+05 7.890e+05 7.900e+05 7.890e+05 7.880e+05",
        " 7.890e+05 7.920e+05 7.920e+05 7.890e+05 7.880e+05",
        " 7.880e+05 7.880e+05 7.880e+05 7.870e+05 7.870e+05",
        " 7.880e+05 7.880e+05 7.870e+05 7.860e+05 7.850e+05",
        " 7.870e+05 7.860e+05 7.860e+05 7.860e+05 7.840e+05",
        " 7.830e+05 7.820e+05 7.820e+05 7.800e+05 7.790e+05",
        " 7.780e+05 7.750e+05 7.710e+05 7.690e+05 7.710e+05",
        " 7.670e+05 7.650e+05 7.630e+05 7.610e+05 7.600e+05",
        " 7.570e+05 7.540e+05 7.510e+05 7.490e+05 7.470e+05",
        " 7.450e+05 7.420e+05 7.370e+05 7.310e+05 7.290e+05",
        " 7.270e+05 7.240e+05 7.200e+05 7.140e+05 7.080e+05",
        " 7.000e+05",
        "*END",
    ]

    assert isinstance(mipas_rfm._parse_content(lines), dict)
